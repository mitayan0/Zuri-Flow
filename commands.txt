Zuri Flow: Setup and Run Commands
1. Initial Setup
Make sure you have Python, pip, PostgreSQL, and Redis installed.
A. Create a virtual environment (recommended)
python3 -m venv venv

B. Activate the virtual environment
For macOS/Linux:
source venv/bin/activate

For Windows:
venv\Scripts\activate

C. Install the required Python packages
pip install -r requirements.txt

D. Create your environment file from the template
This file will hold your database and Redis credentials.
cp .env.example .env

E. Edit the .env file with your actual connection details.
Open the .env file in a text editor and update the placeholder values.
2. Initialize the Database
The init_db.sql file creates the tables for your workflows and tasks.
Replace 'user' and 'database' with the values you set in your .env file.
Make sure your local PostgreSQL server is running before executing this command.
psql -U user -d zuri_flow -f init_db.sql

3. Start the Application Components
A. Start the FastAPI application (main API)
Open your first terminal and run:
uvicorn main:app --reload

B. Start a single Celery worker for ALL queues
Open a second terminal and run:
celery -A engine_core.celery_app worker --loglevel=info -Q orchestrator,python,bash,c

C. Start the simple scheduling service
Open a third terminal and run:
python services/scheduling_service.py

4. Stop all Services
To stop everything, simply press Ctrl+C in each of the three terminal windows.


# Run FastAPI
uvicorn main:app --reload

# Run Celery worker + Beat (RedBeat)
celery -A engine_core.celery_app.celery_app worker -l info
